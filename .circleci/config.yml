version: 2
jobs:
    setup-dx-environment:
        machine: true 
        steps:
        - run:
            name: Download DX and install
            command: | 
                - npm install sfdx-cli
                - npx sfdx
        - run:
            name: create tmp dir and server key; check server key
            command: |
                mkdir /tmp/sfdx-keys 
                echo $SSL_SERVER_KEY_HEX | xxd -r -ps >> /tmp/sfdx-keys/server.key;
                openssl rsa -in /tmp/sfdx-keys/server.key -check -noout
                cat /tmp/sfdx-keys/server.key
                printenv DX_USER
                printenv DX_CONSUMER_KEY
        - run: 
            name: just checking ls
            command: ls -a
        - run:
            name: check auth for all orgs invovled 
            command: |
                sfdx force:auth:jwt:grant --clientid $DX_CONSUMER_KEY --jwtkeyfile /tmp/sfdx-keys/server.key --username $DX_USER --setdefaultdevhubusername --setalias hub
        - run: 
            name: just checking ls againnnn
            command: ls -a
        - save_cache: 
            key: v1-sfdx
            paths: 
                - ./node_modules
                - ./.sfdx
        - persist_to_workspace:
            root: /tmp/sfdx-keys
            paths:
                - server.key
        - store_artifacts:
            path: ~/.sfdx/sfdx.log
            destination: sfdx-logs      


    test-cache:
        machine: true 
        steps: 
            - restore_cache:
                    keys: 
                        - sfdx
            - run: 
                name: does dx work? 
                command: sfdx force:org:list
            - run: 
                name: just checking ls againnnn
                command: ls -a


    finalize:
        machine: true 
        steps:
            - run:
                name: print final success statement => could be used to delete scratch orgs
                command: echo HOOORAY
                when: always



workflows:
  version: 2
  run_build:
    jobs:
      - setup-dx-environment:
          context: org-global
          filters:
            branches:
              only:
                - master
      - test-cache:
          context: org-global
          requires: 
                - setup-dx-environment
      
      
      
      
      
      
      
      
      
      