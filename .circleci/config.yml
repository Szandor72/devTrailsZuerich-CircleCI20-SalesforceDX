version: 2
jobs:
    setup-dx:
        machine: true  
        steps:
        - run: 
            name: Install DX (npm global)
            command: |
                npm install salesforcedx --global
        - run:
            name: create tmp dir and server key; check server key
            command: |
                sfdx version
                mkdir /tmp/sfdx-keys 
                echo $SSL_SERVER_KEY_HEX | xxd -r -ps >> /tmp/sfdx-keys/server.key;
                openssl rsa -in /tmp/sfdx-keys/server.key -check -noout
        - run:
            name: check auth for all orgs invovled 
            command: |
                npm run sfdx force:auth:jwt:grant --clientid $DX_CONSUMER_KEY --jwtkeyfile /tmp/sfdx-keys/server.key --username $DX_USER --setdefaultdevhubusername --setalias hub
        - persist_to_workspace:
            root: /tmp/sfdx-keys
            paths:
                - server.key
        - store_artifacts:
            path: ~/.sfdx/sfdx.log
            destination: sfdx-logs      

    push-and-test-a-little:
        machine: true  
        steps:
            - checkout
            - attach_workspace:
                at: /tmp/sfdx-keys
            - run: 
                name: Update DX if necessary
                command: |
                    sfdx version
                    sfdx plugins --core        
            - run:
                name: auth sfdx
                command: |
                    sfdx force:auth:jwt:grant --clientid $DX_CONSUMER_KEY --jwtkeyfile /tmp/sfdx-keys/server.key --username $DX_USER --setdefaultdevhubusername --setalias hub
            - run: 
                name: create scratch org, push source
                command: |
                    sfdx force:org:create -s -f config/project-scratch-def.json -a circle_build_$CIRCLE_BUILD_NUM
                    sfdx force:source:push -u circle_build_$CIRCLE_BUILD_NUM
            - run: 
                name: run apex tests
                command: |
                    mkdir -p ~/apex
                    sfdx force:apex:test:run -c -d ~/apex/ -r junit --wait 2 -n SObjectServiceTest
            - store_test_results:
                path: ~/apex
            - store_artifacts:
                  path: ~/.sfdx/sfdx.log
                  destination: sfdx-logs   
            - run: 
                name: delete scratch org
                command: sfdx force:org:delete -u circle_build_$CIRCLE_BUILD_NUM -p
                when: always

    push-and-test-more:
        machine: true
        steps:
            - checkout
            - attach_workspace:
                at: /tmp/sfdx-keys
            - run: 
                name: Update DX if necessary
                command: |
                    sfdx version
                    sfdx plugins --core        
            - run:
                name: auth sfdx
                command: |
                    sfdx force:auth:jwt:grant --clientid $DX_CONSUMER_KEY --jwtkeyfile /tmp/sfdx-keys/server.key --username $DX_USER --setdefaultdevhubusername --setalias hub
            - run: 
                name: create scratch org, push source
                command: |
                    sfdx force:org:create -s -f config/project-scratch-def.json -a circle_build_$CIRCLE_BUILD_NUM
                    sfdx force:source:push -u circle_build_$CIRCLE_BUILD_NUM
            - run: 
                name: run apex tests
                command: |
                    mkdir -p ~/apex
                    sfdx force:apex:test:run -c -d ~/apex/ -r junit --wait 2 -n retrieveSObjectControllerTest
            - store_test_results:
                path: ~/apex
            - store_artifacts:
                  path: ~/.sfdx/sfdx.log
                  destination: sfdx-logs   
            - run: 
                name: delete scratch org
                command: sfdx force:org:delete -u circle_build_$CIRCLE_BUILD_NUM -p
                when: always                            
 
    finalize:
        machine: true  
        steps:
            - run:
                name: print final success statement
                command: echo HOOOORAY



workflows:
  version: 2
  run_build:
    jobs:
      - setup-dx:
          context: org-global
          filters:
            branches:
              only:
                - master   
      - push-and-test-a-little:
          context: org-global
          requires:
            - setup-dx
      - push-and-test-more:
          context: org-global
          requires:
            - setup-dx
      - finalize:
            requires:
                - setup-dx
                - push-and-test-a-little
                - push-and-test-more
      
      
      
      
      
      
      
      
      
      